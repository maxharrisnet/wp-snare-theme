// Grid
.clearfix() {
  &:after {
    content: "";
    display: table;
    clear: both;
  }
}

.row(@padding:@baseSpacing) {
  .clearfix();
  padding-left: @padding;
  padding-right: @padding;
  width: 100%;
}

//  Responsive Columns
.make-col(@columns, @padding:@baseSpacing, @section:@section) {
  box-sizing: border-box;
  float: left;
  min-height: 1px;
  overflow: hidden;
  padding: @padding;
  width: 100%*(@columns / @baseColumnCount);
}

.make-col(@columns, @padding:@baseSpacing * 2, @section:@section) when (@section = section) {
  .make-col(@columns, @padding);
  background-color: @black; //
  color: @text-color-alt;
  margin-bottom: @baseSpacing * 2;
  padding: @baseSpacing * 2;
}

.push(@columns) {
  margin-left: 100%*(@columns / @baseColumnCount);
}

.make-col-xl(@columns, @padding) {
  @media @minDesktopLg { 
    .make-col(@columns; @padding);
    .push(0);
  }
}

.make-col-lg(@columns, @padding) {
  @media @maxDesktop { 
    .make-col(@columns; @padding);
    .push(0);
  }
}

.make-col-md(@columns, @padding) {
  @media @maxTablet { 
    .make-col(@columns; @padding);
    .push(0);
  }
}

.make-col-sm(@columns, @padding:(@baseSpacing / 2 )) {
  @media @maxPhone { 
    .make-col(@columns; @padding);
    .push(0);
  }
}

.make-col-xs(@columns, @padding:(@baseSpacing / 2 )) {
  @media @maxPhoneSm { 
    .make-col(@columns; @padding);
    .push(0);
  }
}

.flex-wrap(@padding:(@baseSpacing)) {
  display: flex;
  flex-flow: row;
  overflow: hidden;
  padding: @padding;
}

.element-large() {
  margin: 0 auto @baseSpacing;
  max-width: @element-large-width;
}

// Typography
.make-title(@font-family:@font-family-title) {
  color: @teal;
  display: inline-block;
  font-family: @font-family-title;
  font-size: @font-size-title;
  font-weight: @font-weight-heavy;
  letter-spacing: @letter-spacing-title;
  line-height: @line-height-title;
  margin-bottom: @baseSpacing;
  margin-top: @baseSpacing;
  text-transform: uppercase;  
  width: 100%;
}

.make-heading() {
  font-family: @font-family-title;
  font-size: @font-size-md;
  font-weight: @font-weight-light;
  letter-spacing: @letter-spacing-heading;
  line-height: @line-height-heading;
  margin: (@baseSpacing / 2) 0;
  text-transform: uppercase;
}

.button(@bg:@button-background-color; @color:@button-text-color) {
  .hover-fade();
  background-color: @bg;
  border: 2px solid @bg;
  border-radius: @borderRadius;
  color: @color;
  cursor: pointer;
  display: inline-block;
  font: @font-size-button @font-family-button;
  font-weight: @font-weight-heavy;
  letter-spacing: @letter-spacing-title;
  line-height: @line-height-btn;
  margin: (@baseSpacing / 4) 0;
  padding: (@baseSpacing / 3) (@baseSpacing);
  position: relative;
  text-align: center;
  text-transform: uppercase;
}

.button-small() {
  .button();
  font-size: @font-size-icon;
  padding: (@baseSpacing / 3) (@baseSpacing / 2);
}

// Effects
.transition(@property; @speed:@transition-speed) {
  transition: @property @speed ease-in;
  will-change: @property;
}

.fade-in() {
	.transition(opacity);
	opacity: 0;

	&:hover {
		opacity: 1;
	}
}

.hover-fade(@reverse:@reverse) {
  .transition(opacity);
  opacity: 1;

  &:hover {
    opacity: @hover-opacity;
  }
}

.hover-fade(@reverse:@reverse) when (@reverse = reverse) {
  opacity: @hover-opacity;

  &:hover {
    opacity: 1;
  }
}
